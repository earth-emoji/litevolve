# Generated by Django 2.2 on 2019-04-23 04:19

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_userprofile_user'),
        ('worlds', '0005_auto_20190417_2056'),
    ]

    operations = [
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('scenery', tinymce.models.HTMLField(blank=True, null=True)),
                ('background', tinymce.models.HTMLField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='accounts.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='Society',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('type', tinymce.models.HTMLField(blank=True, null=True)),
                ('government', tinymce.models.HTMLField(blank=True, null=True)),
                ('leadership', tinymce.models.HTMLField(blank=True, null=True)),
                ('military', tinymce.models.HTMLField(blank=True, null=True)),
                ('social_capital', tinymce.models.HTMLField(blank=True, null=True)),
                ('hierarchy', tinymce.models.HTMLField(blank=True, null=True)),
                ('origin', tinymce.models.HTMLField(blank=True, null=True)),
                ('economy', tinymce.models.HTMLField(blank=True, null=True)),
                ('rivals', tinymce.models.HTMLField(blank=True, null=True)),
                ('extra', tinymce.models.HTMLField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='societies', to='accounts.UserProfile')),
                ('places', models.ManyToManyField(blank=True, related_name='societies', to='worlds.Place')),
            ],
        ),
        migrations.AlterField(
            model_name='history',
            name='world',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='worlds.World'),
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('appearance', tinymce.models.HTMLField(blank=True, null=True)),
                ('utility', tinymce.models.HTMLField(blank=True, null=True)),
                ('practices', tinymce.models.HTMLField(blank=True, null=True)),
                ('origins', tinymce.models.HTMLField(blank=True, null=True)),
                ('extra', tinymce.models.HTMLField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technologies', to='accounts.UserProfile')),
                ('societies', models.ManyToManyField(blank=True, related_name='technologies', to='worlds.Society')),
            ],
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('appearance', tinymce.models.HTMLField(blank=True, null=True)),
                ('unique_abilities', tinymce.models.HTMLField(blank=True, null=True)),
                ('origins', tinymce.models.HTMLField(blank=True, null=True)),
                ('habitat', tinymce.models.HTMLField(blank=True, null=True)),
                ('diet', tinymce.models.HTMLField(blank=True, null=True)),
                ('predators', tinymce.models.HTMLField(blank=True, null=True)),
                ('defense', tinymce.models.HTMLField(blank=True, null=True)),
                ('extra', tinymce.models.HTMLField(blank=True, null=True)),
                ('is_intelligent', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='species', to='accounts.UserProfile')),
                ('places', models.ManyToManyField(blank=True, related_name='species', to='worlds.Place')),
            ],
        ),
        migrations.AddField(
            model_name='society',
            name='species',
            field=models.ManyToManyField(blank=True, related_name='societies', to='worlds.Species'),
        ),
        migrations.CreateModel(
            name='SocialGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('type', tinymce.models.HTMLField(blank=True, null=True)),
                ('goals', tinymce.models.HTMLField(blank=True, null=True)),
                ('structure', tinymce.models.HTMLField(blank=True, null=True)),
                ('cohesiveness', tinymce.models.HTMLField(blank=True, null=True)),
                ('extra', tinymce.models.HTMLField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_groups', to='accounts.UserProfile')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_groups', to='worlds.SocialGroup')),
                ('society', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_groups', to='worlds.Society')),
                ('species', models.ManyToManyField(blank=True, related_name='social_groups', to='worlds.Species')),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('span', models.CharField(blank=True, max_length=255)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='accounts.UserProfile')),
                ('world', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='worlds.World')),
            ],
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('deities', tinymce.models.HTMLField(blank=True, null=True)),
                ('beliefs', tinymce.models.HTMLField(blank=True, null=True)),
                ('practices', tinymce.models.HTMLField(blank=True, null=True)),
                ('origins', tinymce.models.HTMLField(blank=True, null=True)),
                ('organization', tinymce.models.HTMLField(blank=True, null=True)),
                ('holy_objects', tinymce.models.HTMLField(blank=True, null=True)),
                ('holidays', tinymce.models.HTMLField(blank=True, null=True)),
                ('revered_figures', tinymce.models.HTMLField(blank=True, null=True)),
                ('extra', tinymce.models.HTMLField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='religions', to='accounts.UserProfile')),
                ('places', models.ManyToManyField(blank=True, related_name='religions', to='worlds.Place')),
                ('societies', models.ManyToManyField(blank=True, related_name='religions', to='worlds.Society')),
                ('species', models.ManyToManyField(blank=True, related_name='religions', to='worlds.Species')),
            ],
        ),
        migrations.CreateModel(
            name='PlaceSeason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weather', tinymce.models.HTMLField(blank=True, null=True)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='worlds.Place')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='worlds.Season')),
            ],
        ),
        migrations.AddField(
            model_name='place',
            name='seasons',
            field=models.ManyToManyField(related_name='seasons', through='worlds.PlaceSeason', to='worlds.Season'),
        ),
        migrations.AddField(
            model_name='place',
            name='world',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='worlds.World'),
        ),
        migrations.CreateModel(
            name='NaturalPhenomena',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='natural_phenomenas', to='accounts.UserProfile')),
                ('world', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='natural_phenomenas', to='worlds.World')),
            ],
        ),
        migrations.CreateModel(
            name='NaturalObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('appearance', tinymce.models.HTMLField(blank=True, null=True)),
                ('history', tinymce.models.HTMLField(blank=True, null=True)),
                ('value', models.CharField(blank=True, choices=[('Highly', 'Highly'), ('Average', 'Average'), ('Barely', 'Barely'), ('No', 'No')], max_length=255, null=True)),
                ('value_description', tinymce.models.HTMLField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='natural_objects', to='accounts.UserProfile')),
                ('places', models.ManyToManyField(blank=True, related_name='natural_objects', to='worlds.Place')),
            ],
        ),
        migrations.CreateModel(
            name='Infrastructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('type', tinymce.models.HTMLField(blank=True, null=True)),
                ('appearance', tinymce.models.HTMLField(blank=True, null=True)),
                ('purpose', tinymce.models.HTMLField(blank=True, null=True)),
                ('origins', tinymce.models.HTMLField(blank=True, null=True)),
                ('extra', tinymce.models.HTMLField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='infrastructures', to='accounts.UserProfile')),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='infrastructures', to='worlds.Place')),
                ('society', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='infrastructures', to='worlds.Society')),
            ],
        ),
        migrations.CreateModel(
            name='CelestialBody',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='celestial_bodies', to='accounts.UserProfile')),
                ('world', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='celestial_bodies', to='worlds.World')),
            ],
        ),
        migrations.AddField(
            model_name='history',
            name='infrastructure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='worlds.Infrastructure'),
        ),
        migrations.AddField(
            model_name='history',
            name='place',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='worlds.Place'),
        ),
        migrations.AddField(
            model_name='history',
            name='religion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='worlds.Religion'),
        ),
        migrations.AddField(
            model_name='history',
            name='social_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='worlds.SocialGroup'),
        ),
        migrations.AddField(
            model_name='history',
            name='society',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='worlds.Society'),
        ),
        migrations.AddField(
            model_name='history',
            name='species',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='worlds.Species'),
        ),
    ]
